#include <stdio.h>
#include <string.h>
#include <ctype.h>

typedef enum { TOO_WEAK, STRONG_ENOUGH } PasswordStrength;

PasswordStrength is_secure_password(char *password) {
    int lowers = 0, uppers = 0, digits = 0;
    int len = (int)strlen(password);

    for (int i = 0; i < len; i++) {
        unsigned char c = (unsigned char)password[i];
        if (islower(c)) lowers++;
        else if (isupper(c)) uppers++;
        else if (isdigit(c)) digits++;
    }

    if (len >= 8 && len <= 12 && lowers >= 2 && uppers >= 2 && digits >= 1) {
        return STRONG_ENOUGH;
    }
    return TOO_WEAK;
}

int main(void) {
    char password[128];

    PasswordStrength strength;
    do {
        printf("Choose a password:\n");
        if (!fgets(password, sizeof(password), stdin)) {
            return 1;
        }
        // Strip trailing newline if present
        size_t n = strlen(password);
        if (n > 0 && password[n - 1] == '\n') {
            password[n - 1] = '\0';
        }

        strength = is_secure_password(password);
    } while (strength != STRONG_ENOUGH);

    printf("%s is secure enough!\n", password);
    return 0;
}